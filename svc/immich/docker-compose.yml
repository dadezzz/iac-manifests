# kics-scan disable=698ed579-b239-4f8f-a388-baa4bcb13ef8

# Create a .env file with:
#
# POSTGRES_DB=
# POSTGRES_PASSWORD=
# POSTGRES_USER=

networks:
  caddy_default:
    external: true
  default: {}

services:
  # kics-scan ignore-block
  chown-volumes:
    entrypoint:
      - sh
      - -c
      - chown -R 5551:5551 /volumes/data && chown -R 8723:8723 /volumes/machine-learning-cache && chown -R 70:70 /volumes/postgres
    image: docker.io/library/busybox:1.37.0-musl@sha256:e95352f7c5174c96ffc684150c9d08fc3ba26ac2f37c613c398fd369e15a0789
    read_only: true
    restart: "no"
    security_opt:
      - no-new-privileges:true
    user: 0:0
    volumes:
      - data:/volumes/data
      - machine-learning-cache:/volumes/machine-learning-cache
      - postgres:/volumes/postgres

  immich-machine-learning:
    cap_drop:
      - ALL
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
    image: ghcr.io/immich-app/immich-machine-learning:v1.120.1@sha256:0a5d8d75f026342a56e1065613e565ec40a05f4042dc7fead1dcfd66d539fef3
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /.cache:uid=8723,gid=8723
      - /tmp:uid=8723,gid=8723
    user: 8723:8723
    volumes:
      - machine-learning-cache:/cache

  immich-server:
    cap_drop:
      - ALL
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      - DB_HOSTNAME=postgres
      - REDIS_HOSTNAME=redis
      - DB_DATABASE_NAME=${POSTGRES_DB}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_USERNAME=${POSTGRES_USER}
    image: ghcr.io/immich-app/immich-server:v1.120.1@sha256:4193f3cc99bb4d99f53007f07d45e2efbcd531f4e81a765470b2cce433f33131
    networks:
      caddy_default:
        aliases:
          - immich
      default: {}
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 5551:5551
    volumes:
      - data:/usr/src/app/upload

  postgres:
    cap_drop:
      - ALL
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
    env_file: .env
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - pg_isready
        - --username=${POSTGRES_USER}
      timeout: 5s
    image: docker.io/tensorchord/pgvecto-rs:pg16-v0.3.0-rootless@sha256:d125f3aec02bfa66764432eae76e1098a3b0c6f8bf13db38f5af1156499c90b5
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=70,gid=70
      - /var/run/postgresql:uid=70,gid=70
    user: 70:70
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    cap_drop:
      - ALL
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 5s
    image: docker.io/library/redis:7.4.1-alpine@sha256:de13e74e14b98eb96bdf886791ae47686c3c5d29f9d5f85ea55206843e3fce26
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /data:uid=9243,gid=9243
    user: 9243:9243

volumes:
  data: {}
  machine-learning-cache: {}
  postgres: {}
