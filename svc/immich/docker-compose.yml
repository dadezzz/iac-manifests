# kics-scan disable=698ed579-b239-4f8f-a388-baa4bcb13ef8

# Create a .env file with:
#
# POSTGRES_DB=
# POSTGRES_PASSWORD=
# POSTGRES_USER=

networks:
  caddy_default:
    external: true
  default: {}

services:
  immich-machine-learning:
    cap_drop:
      - ALL
    image: ghcr.io/immich-app/immich-machine-learning:v1.118.2@sha256:4d89a309fd08a93649f1ae4a7572ae98f09d66b4c1dfb7916b71d31dec7eda38
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /.cache:uid=8723,gid=8723
      - /tmp:uid=8723,gid=8723
    user: 8723:8723
    volumes:
      - machine-learning-cache:/cache
  immich-server:
    cap_drop:
      - ALL
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      - DB_HOSTNAME=postgres
      - REDIS_HOSTNAME=redis
      - DB_DATABASE_NAME=${POSTGRES_DB}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_USERNAME=${POSTGRES_USER}
    image: ghcr.io/immich-app/immich-server:v1.118.2@sha256:f158810c90f80162f9b08729bbaec963731f12662960be38ff93093b78a0bbdf
    networks:
      caddy_default:
        aliases:
          - immich
      default: {}
    ports:
      # Used for connecting the app, since there is already tailscale encryption.
      - 100.106.32.89:2283:2283
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 5551:5551
    volumes:
      - data:/usr/src/app/upload
  postgres:
    cap_drop:
      - ALL
    env_file: .env
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - pg_isready
        - --username=${POSTGRES_USER}
      timeout: 5s
    image: docker.io/tensorchord/pgvecto-rs:pg16-v0.3.0-rootless@sha256:d125f3aec02bfa66764432eae76e1098a3b0c6f8bf13db38f5af1156499c90b5
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=19166,gid=19166
      - /var/run/postgresql:uid=19166,gid=19166
    user: 19166:19166
    volumes:
      - postgres:/var/lib/postgresql/data
  redis:
    cap_drop:
      - ALL
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 5s
    image: docker.io/library/redis:7.4.1-alpine@sha256:de13e74e14b98eb96bdf886791ae47686c3c5d29f9d5f85ea55206843e3fce26
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /data:uid=9243,gid=9243
    user: 9243:9243

volumes:
  data: {}
  machine-learning-cache: {}
  postgres: {}
