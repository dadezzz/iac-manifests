# kics-scan disable=698ed579-b239-4f8f-a388-baa4bcb13ef8

# SETUP:
#
# Create a .env file with:
#
# - OIDC_CLIENT_ID
# - OIDC_CLIENT_SECRET
# - POSTGRES_DB
# - POSTGRES_PASSWORD
# - POSTGRES_USER
# - SECRET_KEY
# - SMTP_PASSWORD
# - SMTP_USERNAME
# - UTILS_SECRET

networks:
  traefik_default:
    external: true

services:
  # kics-scan ignore-block
  chown-volumes:
    entrypoint:
      - sh
      - -c
      - chown -R 21127:21127 /var/lib/volumes/data && chown -R 24056:24056 /var/lib/volumes/redis && chown -R 70:70 /var/lib/volumes/postgres
    image: docker.io/library/busybox:1.37.0-musl@sha256:e95352f7c5174c96ffc684150c9d08fc3ba26ac2f37c613c398fd369e15a0789
    network_mode: none
    read_only: true
    security_opt:
      - no-new-privileges:true
    volumes:
      - data:/var/lib/volumes/data
      - redis:/var/lib/volumes/redis
      - postgres:/var/lib/volumes/postgres

  outline:
    cap_drop:
      - ALL
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}
      FILE_STORAGE: local
      OIDC_AUTH_URI: https://gitlab.com/oauth/authorize
      OIDC_DISABLE_REDIRECT: true
      OIDC_DISPLAY_NAME: GitLab
      OIDC_SCOPES: openid email
      OIDC_TOKEN_URI: https://gitlab.com/oauth/token
      OIDC_USERINFO_URI: https://gitlab.com/oauth/userinfo
      OIDC_USERNAME_CLAIM: username
      PGSSLMODE: disable
      RATE_LIMITER_ENABLED: true
      REDIS_URL: redis://redis:6379
      SMTP_FROM_EMAIL: Outline <outline@zarantonello.dev>
      SMTP_HOST: smtp.purelymail.com
      SMTP_PORT: 465
      URL: https://docs.zarantonello.dev
    image: docker.io/outlinewiki/outline:0.81.1@sha256:e539971b59b2523ab54bf792105d1cff6432974a37e18211c175cd053d7feb62
    labels:
      traefik.enable: true
      traefik.http.routers.outline.rule: Host(`docs.zarantonello.dev`)
      traefik.http.services.outline.loadbalancer.server.port: 3000
    networks:
      - default
      - traefik_default
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /.yarn:uid=21127,gid=21127
    user: 21127:21127
    volumes:
      - data:/var/lib/outline/data

  outline-cron:
    cap_drop:
      - ALL
    depends_on:
      outline:
        condition: service_started
    entrypoint:
      - sh
      - -c
      - while true ; do wget http://outline:3000/api/cron.daily?token=${UTILS_SECRET} ; sleep 43200 ; done
    env_file: .env
    image: docker.io/library/alpine:3.20.3@sha256:1e42bbe2508154c9126d48c2b8a75420c3544343bf86fd041fb7527e017a4b4a
    networks:
      - default
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 22219:22219

  postgres:
    cap_drop:
      - ALL
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
    env_file: .env
    environment:
      PGUSER: ${POSTGRES_USER}
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - pg_isready
      timeout: 5s
    image: docker.io/library/postgres:17.2-alpine@sha256:e7897baa70dae1968d23d785adb4aeb699175e0bcaae44f98a7083ecb9668b93
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=70,gid=70
      - /var/run/postgresql:uid=70,gid=70
    # User has to be 70, otherwise the container tries to chown the postgres
    # volume but fails due to insufficient permissions.
    user: 70:70
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    cap_drop:
      - ALL
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 5s
    image: docker.io/library/redis:7.4.1-alpine@sha256:c1e88455c85225310bbea54816e9c3f4b5295815e6dbf80c34d40afc6df28275
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 24056:24056
    volumes:
      - redis:/data

volumes:
  data: {}
  postgres: {}
  redis: {}
