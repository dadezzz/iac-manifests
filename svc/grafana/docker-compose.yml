# SETUP:
#
# Create a .env file with:
#
# - ADMIN_USER
# - POSTGRES_DB
# - POSTGRES_PASSWORD
# - POSTGRES_USER
# - SMTP_PASSWORD
# - SMTP_USER

configs:
  grafana:
    file: ./grafana.ini

networks:
  traefik_default:
    external: true
  vmagent_default:
    external: true

services:
  grafana:
    cap_drop:
      - ALL
    configs:
      - source: grafana
        target: /etc/grafana/grafana.ini
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    image: docker.io/grafana/grafana:11.4.0@sha256:d8ea37798ccc41061a62ab080f2676dda6bf7815558499f901bdb0f533a456fb
    labels:
      traefik.enable: true
      traefik.http.routers.grafana.rule: Host(`grafana.zarantonello.net`)
      traefik.http.services.grafana.loadbalancer.server.port: 3000
      victoriametrics.job: grafana
      victoriametrics.port: 3000
    networks:
      - default
      - traefik_default
      - vmagent_default
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 31904:31904
    volumes:
      - ./provisioning:/etc/grafana/provisioning:z
      - data:/var/lib/grafana

  postgres:
    cap_drop:
      - ALL
    env_file: .env
    environment:
      PGUSER: ${POSTGRES_USER}
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - pg_isready
      timeout: 5s
    image: docker.io/library/postgres:17.2-alpine@sha256:d37d2c160d34430877c802e5adc22824a2ad453499db9bab1a2ceb2be6c1a46f
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=70,gid=70
      - /var/run/postgresql:uid=70,gid=70
    # User has to be 70, otherwise the container tries to chown the postgres
    # volume but fails due to insufficient permissions.
    user: 70:70
    volumes:
      - postgres:/var/lib/postgresql/data

volumes:
  data: {}
  postgres: {}
