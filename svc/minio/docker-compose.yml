# kics-scan disable=698ed579-b239-4f8f-a388-baa4bcb13ef8

# SETUP:
#
# Create a .env file with
#
# - MINIO_ROOT_USER
# - MINIO_ROOT_PASSWORD
#
# TIP: In the host's /etc/fstab file mount the 4 data disks with the nofail
# option to make the system boot even if one the data drives fails.

networks:
  traefik_default:
    external: true

services:
  # kics-scan ignore-block
  chown-volumes:
    entrypoint:
      - sh
      - -c
      - chown -R 29349:29349 /var/lib/volumes/minio
    image: docker.io/library/busybox:1.37.0-musl@sha256:e95352f7c5174c96ffc684150c9d08fc3ba26ac2f37c613c398fd369e15a0789
    network_mode: none
    read_only: true
    security_opt:
      - no-new-privileges:true
    volumes:
      - /mnt/minio:/var/lib/volumes/minio:z

  minio:
    cap_drop:
      - ALL
    command:
      - server
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
    env_file: .env
    environment:
      - MINIO_VOLUMES=/mnt/disk1 /mnt/disk2 /mnt/disk3 /mnt/disk4
      - MINIO_STORAGE_CLASS_STANDARD=EC:1
      - MINIO_CONSOLE_ADDRESS=:9001
      - MINIO_BROWSER_REDIRECT_URL=https://minio.zarantonello.dev/minio/
    image: quay.io/minio/minio:RELEASE.2024-11-07T00-52-20Z-cpuv1@sha256:8d01c1f03e13a216995d9a064f7310a28a978a3d34dd0ed4799247842fcbdc8c
    labels:
      traefik.enable: true
      traefik.http.routers.minio.rule: Host(`minio.zarantonello.dev`)
      traefik.http.routers.minio.service: minio
      traefik.http.services.minio.loadbalancer.server.port: 9000
      traefik.http.routers.minio-dashboard.rule: Host(`minio.zarantonello.dev`) && PathPrefix('/minio')
      traefik.http.routers.minio-dashboard.service: minio-dashboard
      traefik.http.services.minio-dashboard.loadbalancer.server.port: 9001
    networks:
      - traefik_default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 29349:29349
    volumes:
      - /mnt/minio:/mnt:z
