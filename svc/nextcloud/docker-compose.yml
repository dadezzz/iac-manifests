# kics-scan disable=698ed579-b239-4f8f-a388-baa4bcb13ef8

# SETUP:
#
# Create a .env file with:
#
# - POSTGRES_DB
# - POSTGRES_PASSWORD
# - POSTGRES_USER
# - NEXTCLOUD_ADMIN_USER
# - NEXTCLOUD_ADMIN_PASSWORD
#
# Additional configuration can be done by running
# `docker compose exec -it nextcloud vi /var/www/html/config/config.php`.

configs:
  caddyfile:
    file: Caddyfile

networks:
  cloudflared_default:
    external: true
  default: {}

services:
  caddy:
    # kics-scan ignore-block
    cap_add:
      - NET_BIND_SERVICE
    cap_drop:
      - ALL
    configs:
      - source: caddyfile
        target: /etc/caddy/Caddyfile
    image: docker.io/library/caddy:2.8.4-alpine@sha256:33937b9d51461ea87794350c1c09ce53f327802508929d78f3b5642533f2f7db
    networks:
      cloudflared_default:
        aliases:
          - nextcloud
      default: {}
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /config:uid=52892,gid=52892
      - /data:uid=52892,gid=52892
    user: 52892:52892
    volumes:
      - nextcloud:/var/www/html:ro

  # kics-scan ignore-block
  chown-volumes:
    entrypoint:
      - sh
      - -c
      - chown -R 82:82 /volumes/data && chown -R 24056:24056 /volumes/redis
    image: docker.io/library/busybox:1.37.0-musl@sha256:e95352f7c5174c96ffc684150c9d08fc3ba26ac2f37c613c398fd369e15a0789
    read_only: true
    restart: "no"
    security_opt:
      - no-new-privileges:true
    user: 0:0
    volumes:
      - data:/volumes/data
      - redis:/volumes/redis

  nextcloud_cron:
    cap_drop:
      - ALL
    depends_on:
      nextcloud_server:
        condition: service_started
    entrypoint:
      - sh
      - -c
      - while true ; do php -f /var/www/html/cron.php && sleep 300 ; done
    image: docker.io/library/nextcloud:30.0.1-fpm-alpine@sha256:a4d6a3d56f977895443e698bf66809871827fd8112727fc3601113d215747596
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=82,gid=82
    user: 82:82
    volumes:
      - data:/var/www/html/data
      - nextcloud:/var/www/html

  nextcloud_notify_push:
    cap_drop:
      - ALL
    depends_on:
      nextcloud_server:
        condition: service_started
    entrypoint:
      - /var/www/html/custom_apps/notify_push/bin/x86_64/notify_push
      - /var/www/html/config/config.php
    image: docker.io/library/nextcloud:30.0.1-fpm-alpine@sha256:a4d6a3d56f977895443e698bf66809871827fd8112727fc3601113d215747596
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 82:82
    volumes:
      - nextcloud:/var/www/html

  nextcloud_server:
    cap_drop:
      - ALL
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      NEXTCLOUD_TRUSTED_DOMAINS: cloud.zarantonello.dev
      OVERWRITECLIURL: http://caddy:3000
      OVERWRITEHOST: cloud.zarantonello.dev
      OVERWRITEPROTOCOL: https
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
    image: docker.io/library/nextcloud:30.0.1-fpm-alpine@sha256:a4d6a3d56f977895443e698bf66809871827fd8112727fc3601113d215747596
    networks:
      - default
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=82,gid=82
    user: 82:82
    volumes:
      - data:/var/www/html/data
      - nextcloud:/var/www/html

  postgres:
    cap_drop:
      - ALL
    env_file: .env
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - pg_isready
      timeout: 5s
    image: docker.io/library/postgres:17.0-alpine@sha256:14195b0729fce792f47ae3c3704d6fd04305826d57af3b01d5b4d004667df174
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=70,gid=70
      - /var/run/postgresql:uid=70,gid=70
    user: 70:70
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    cap_drop:
      - ALL
    depends_on:
      chown-volumes:
        condition: service_completed_successfully
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 5s
    image: docker.io/library/redis:7.4.1-alpine@sha256:de13e74e14b98eb96bdf886791ae47686c3c5d29f9d5f85ea55206843e3fce26
    networks:
      - default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 24056:24056
    volumes:
      - redis:/data

volumes:
  data: {}
  nextcloud: {}
  postgres: {}
  redis: {}
