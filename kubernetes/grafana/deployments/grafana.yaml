apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      apps.zarantonello.dev/name: grafana
      apps.zarantonello.dev/namespace: grafana
  template:
    metadata:
      labels:
        apps.zarantonello.dev/name: grafana
        apps.zarantonello.dev/namespace: grafana
        monitoring.zarantonello.dev/job: grafana
        monitoring.zarantonello.dev/port: "3000"
    spec:
      containers:
        - envFrom:
            - secretRef:
                name: grafana-env
          image: docker.io/grafana/grafana:11.5.2@sha256:8b37a2f028f164ce7b9889e1765b9d6ee23fec80f871d156fbf436d6198d32b7
          name: grafana
          ports:
            - containerPort: 3000
              name: http
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/grafana/grafana.ini
              name: config
              subPath: grafana.ini
            - mountPath: /etc/grafana/provisioning
              name: provisioning
              # This data doesn't need to be persisted. If we wanted to store
              # the screenshots produced with alerting then we could set up s3
              # storage.
            - mountPath: /var/lib/grafana
              name: tmp-data
            - mountPath: /tmp
              name: tmp
      enableServiceLinks: false
      securityContext:
        fsGroup: 54480
        runAsGroup: 54480
        runAsNonRoot: true
        runAsUser: 54480
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - configMap:
            name: grafana-config
          name: config
        - configMap:
            name: grafana-provisioning
          name: provisioning
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: tmp-data
