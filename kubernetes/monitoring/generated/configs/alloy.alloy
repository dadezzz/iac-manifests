discovery.kubernetes "pods" {
  role = "pod"

  selectors {
    role = "pod"
    // Select only pods on the same node.
    field = "spec.nodeName=" + sys.env("NODE_HOSTNAME")
    // Require that label defining job name is set.
    label = "monitoring.zarantonello.dev/job"
  }
}

discovery.relabel "kubernetes_pods" {
  targets = discovery.kubernetes.pods.targets

  rule {
    action = "labelmap"
    regex = "__meta_kubernetes_pod_label_monitoring_zarantonello_dev_job"
    replacement = "job"
  }

  rule {
    action = "replace"
    regex = "([^:]+):[0-9]+;([0-9]+)"
    replacement = "$1:$2"
    source_labels = ["__address__", "__meta_kubernetes_pod_label_monitoring_zarantonello_dev_port"]
    target_label = "__address__"
  }
}

prometheus.scrape "kubernetes" {
  forward_to = [prometheus.remote_write.mimir.receiver]
  targets = discovery.relabel.kubernetes_pods.output
}

prometheus.remote_write "mimir" {
  endpoint {
    url = "http://mimir.monitoring.svc.cluster-0.zarantonello.dev/api/v1/push"
  }
}