apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: alloy
spec:
  selector:
    matchLabels:
      apps.zarantonello.dev/name: alloy
      apps.zarantonello.dev/namespace: alloy
  template:
    metadata:
      labels:
        apps.zarantonello.dev/name: alloy
        apps.zarantonello.dev/namespace: alloy
        monitoring.zarantonello.dev/job: alloy
        monitoring.zarantonello.dev/port: "12345"
    spec:
      containers:
        - args:
            - run
            - --server.http.listen-addr=[::]:12345
            - --storage.path=/var/tmp/alloy/data
            - /etc/alloy/alloy.alloy
          env:
            # Let alloy know what is the hostname of the node its running on.
            - name: NODE_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: docker.io/grafana/alloy:v1.6.1@sha256:25db7cff68ec18a4991bed5205589229f3a5b60168ce4db7313ad8e4a997adec
          name: alloy
          ports:
            - containerPort: 12345
              name: http
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/alloy/alloy.alloy
              name: config
              subPath: alloy.alloy
            - mountPath: /var/tmp/alloy
              name: tmp
      enableServiceLinks: false
      securityContext:
        fsGroup: 38082
        runAsGroup: 38082
        runAsNonRoot: true
        runAsUser: 38082
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: alloy
      volumes:
        - configMap:
            name: alloy
          name: config
        # Just need to persist stuff until it is sent to loki or mimir. It's not
        # important if we lose some minutes worth of data.
        - emptyDir: {}
          name: tmp
