networks:
  traefik_default:
    external: true
  vmagent_default:
    external: true

services:
  postgres:
    cap_drop:
      - ALL
    env_file: .env
    environment:
      # Configures the user used for healthchecking.
      PGUSER: ${POSTGRES_USER}
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - pg_isready
      timeout: 5s
    image: docker.io/library/postgres:17.4-alpine@sha256:7062a2109c4b51f3c792c7ea01e83ed12ef9a980886e3b3d380a7d2e5f6ce3f5
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=70,gid=70
      - /var/run/postgresql:uid=70,gid=70
    # User has to be 70, otherwise the container tries to chown the postgres
    # volume but fails due to insufficient permissions.
    user: 70:70
    volumes:
      - $HOME/volumes/woodpecker-server/postgres:/var/lib/postgresql/data

  woodpecker-server:
    cap_drop:
      - ALL
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      WOODPECKER_DATABASE_DATASOURCE=: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      WOODPECKER_DATABASE_DRIVER: postgres
      WOODPECKER_ENVIRONMENT: CI_VOLUME_BASE_DIR:${HOME}/volumes/woodpecker-agent
      WOODPECKER_GITHUB: true
      WOODPECKER_HOST: https://ci.zarantonello.dev
      WOODPECKER_METRICS_SERVER_ADDR: :9001
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - woodpecker-server
        - ping
      timeout: 5s
    image: docker.io/woodpeckerci/woodpecker-server:v3.5.1@sha256:b113dd2c9438213151351df7413997f2025010edea75c037a9f8691a70938de5
    labels:
      traefik.enable: true
      traefik.http.routers.woodpecker-grpc.entrypoints: http
      traefik.http.routers.woodpecker-grpc.rule: Host(`ci-grpc.zarantonello.dev`)
      traefik.http.routers.woodpecker-grpc.service: woodpecker-grpc
      traefik.http.routers.woodpecker-http.entrypoints: cloudflared
      traefik.http.routers.woodpecker-http.rule: Host(`ci.zarantonello.dev`)
      traefik.http.routers.woodpecker-http.service: woodpecker-http
      traefik.http.services.woodpecker-grpc.loadbalancer.server.port: 9000
      traefik.http.services.woodpecker-grpc.loadbalancer.server.scheme: h2c
      traefik.http.services.woodpecker-http.loadbalancer.server.port: 8000
      victoriametrics.job: woodpecker-server
      victoriametrics.port: 9001
    networks:
      - default
      - traefik_default
      - vmagent_default
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 4518:4518
