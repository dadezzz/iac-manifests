networks:
  alloy_default:
    external: true
  traefik_default:
    external: true

services:
  keycloak:
    command:
      - start
      - --http-enabled=true
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      KC_DB: postgres
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_HOSTNAME: https://auth.zarantonello.dev
      KC_METRICS_ENABLED: true
      KC_PROXY_HEADERS: xforwarded
      KC_PROXY_TRUSTED_ADDRESSES: 172.16.0.0/12
    image: quay.io/keycloak/keycloak:26.2.4@sha256:4a81762677f8911c6266e3dea57a2d78fa17bd63408debbf23afd8cc46fe256e
    labels:
      monitoring.collect: true
      monitoring.metrics.port: 9000
      traefik.enable: true
      traefik.http.routers.keycloack-public.entrypoints: cloudflared
      traefik.http.routers.keycloack-public.rule: Host(`auth.zarantonello.dev`) && (PathPrefix(`/realms`)  || PathPrefix(`/resources`))
      traefik.http.routers.keycloack-public.service: keycloack-public
      traefik.http.routers.keycloack.entrypoints: https
      traefik.http.routers.keycloack.rule: Host(`auth.zarantonello.dev`)
      traefik.http.routers.keycloack.service: keycloack
      traefik.http.services.keycloack-public.loadbalancer.server.port: 8080
      traefik.http.services.keycloack.loadbalancer.server.port: 8080
    networks:
      - alloy_default
      - default
      - traefik_default
    restart: always
    security_opt:
      - no-new-privileges:true

  postgres:
    cap_drop:
      - ALL
    env_file: .env
    environment:
      # Configures the user used for healthchecking.
      PGUSER: ${POSTGRES_USER}
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD
        - pg_isready
      timeout: 5s
    image: docker.io/library/postgres:17.5-alpine@sha256:f325a29ec9deb7039c5f07761d77d79d537dac836ecd99f982f6ca5476724604
    labels:
      monitoring.collect: true
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:uid=70,gid=70
      - /var/run/postgresql:uid=70,gid=70
    # User has to be 70, otherwise the container tries to chown the postgres
    # volume but fails due to insufficient permissions.
    user: 70:70
    volumes:
      - $HOME/volumes/keycloak/postgres:/var/lib/postgresql/data
